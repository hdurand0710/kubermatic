// Code generated by go-swagger; DO NOT EDIT.

package kubevirt

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/kubermatic/v2/pkg/test/e2e/utils/apiclient/models"
)

// GetKubevirtStorageClassReader is a Reader for the GetKubevirtStorageClass structure.
type GetKubevirtStorageClassReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKubevirtStorageClassReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKubevirtStorageClassOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetKubevirtStorageClassDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetKubevirtStorageClassOK creates a GetKubevirtStorageClassOK with default headers values
func NewGetKubevirtStorageClassOK() *GetKubevirtStorageClassOK {
	return &GetKubevirtStorageClassOK{}
}

/* GetKubevirtStorageClassOK describes a response with status code 200, with default header values.

StorageClass
*/
type GetKubevirtStorageClassOK struct {
	Payload *models.StorageClass
}

func (o *GetKubevirtStorageClassOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/providers/kubevirt/storageclasses/{storageclass_id}][%d] getKubevirtStorageClassOK  %+v", 200, o.Payload)
}
func (o *GetKubevirtStorageClassOK) GetPayload() *models.StorageClass {
	return o.Payload
}

func (o *GetKubevirtStorageClassOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StorageClass)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKubevirtStorageClassDefault creates a GetKubevirtStorageClassDefault with default headers values
func NewGetKubevirtStorageClassDefault(code int) *GetKubevirtStorageClassDefault {
	return &GetKubevirtStorageClassDefault{
		_statusCode: code,
	}
}

/* GetKubevirtStorageClassDefault describes a response with status code -1, with default header values.

errorResponse
*/
type GetKubevirtStorageClassDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the get kubevirt storage class default response
func (o *GetKubevirtStorageClassDefault) Code() int {
	return o._statusCode
}

func (o *GetKubevirtStorageClassDefault) Error() string {
	return fmt.Sprintf("[GET /api/v2/providers/kubevirt/storageclasses/{storageclass_id}][%d] getKubevirtStorageClass default  %+v", o._statusCode, o.Payload)
}
func (o *GetKubevirtStorageClassDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetKubevirtStorageClassDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
